modelId: AdaptivePrices

info:
  descr: |
    Try to better understand the effects 
    of adaptive price setting on 
    volatility.
  
vars:
  dp:
    descr: Change in price level
    formula: 'p - lag_p'
    laginit: '0'
  p_adapt:
    descr: |
      Purely adaptive component of price with no link to fundamentals
      Simply extrapolate old price level
    formula: 'lag_p + lag_dp'
  dp_fund:
    descr: Change in fundamental value (we can have autocorrelation)
    formula: 'shock_ac * lag_dp_fund + eps_fund' 
    
  p_fund:
    descr: Fundamental asset value
    formula: 'lag_p_fund + dp_fund'
    laginit: 'p_fund_init'
  p:
    descr: Current asset price
    formula: 'alpha*p_adapt + (1-alpha)*p_fund' 
    laginit: 'p_fund_init'

randomVars:
  eps_fund:
    descr: Random shock to fundamental value
    formula: 'rnorm(1,eps_mean,eps_sigma)'
    laginit: 0


curves:
  price_alpha: 
    eq: 'p_fic  == a*p_adapt + (1-a)*p_fund'
    xy: [a,p_fic]
    color: red

panes:
  pa:
    pos: [1,1]
    xy: [a,p_fic]
    curves: [price_alpha]
    xmarkers: [alpha]
    ymarkers: [p,p_fund,p_adapt]

# Params will be computed ex-ante for all T
# they may be modified by shocks
# Formulas either return a single value or a
# vector of length T
params:
  eps_mean: 0
  eps_sigma: 5
  eps_fund:
    formula: 'rnorm(1,eps_mean,eps_sigma)'

scenarios:
  base:
    T: 20
    init:
      p_fund_init: 1
      eps_mean: 0
      eps_sigma: 0.1
      alpha: 0.9
      shock_ac: 0
      
    axis:
      a: [0,1]
      p_fic: [-1,3]
    shocks:
      p_fund_inc:
        descr: Information arrives that increases fundamental price
        effects:
          eps_mean: 1
          eps_sigma: 0
        start: 2
        duration: 1